version: '3.8'

services:
  embedding-service:
    build:
      context: .
      dockerfile: Dockerfile
    image: vectron/embedding-service:latest
    container_name: vectron-embedding-service
    restart: unless-stopped
    ports:
      - "8001:8001"
      - "8002:8002"  # Prometheus metrics port
    volumes:
      - ./data:/app/data
      - ./models:/app/models
    environment:
      - PORT=8001
      - METRICS_PORT=8002
      - DEBUG=false
      - ENABLE_METRICS=true
      - REDIS_ENABLED=true
      - REDIS_HOST=redis
      - MAX_WORKERS=4
      - MAX_BATCH_SIZE=64
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-vectron_default_encryption_key}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-supersecretkey123456789}
      - AUTH_ENABLED=${AUTH_ENABLED:-false}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - COHERE_API_KEY=${COHERE_API_KEY:-}
      - HF_API_TOKEN=${HF_API_TOKEN:-}
    depends_on:
      - redis
    networks:
      - vectron-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 1G

  redis:
    image: redis:7-alpine
    container_name: vectron-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --save 60 1 --loglevel warning
    networks:
      - vectron-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  prometheus:
    image: prom/prometheus:latest
    container_name: vectron-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    networks:
      - vectron-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  grafana:
    image: grafana/grafana:latest
    container_name: vectron-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    depends_on:
      - prometheus
    networks:
      - vectron-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  vectron-network:
    driver: bridge 